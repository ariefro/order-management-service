{
  "openapi": "3.0.0",
  "info": {
    "title": "Order Management API",
    "description": "API documentation for an order management system, allowing users to create, retrieve, update, and delete orders efficiently.",
    "version": "1.0.0"
  },
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "description": "Retrieve a list of all products with pagination support.",
        "responses": {
          "200": {
            "description": "Successful response with a list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Products fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "totalItems": {
                          "type": "integer",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 10
                        },
                        "currentPage": {
                          "type": "integer",
                          "example": 1
                        },
                        "pageSize": {
                          "type": "integer",
                          "example": 10
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Add a new product to the inventory.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Noodle Nova"
                  },
                  "price": {
                    "type": "integer",
                    "example": 20000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Products fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid product data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please fill all of mandatory field"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "description": "Retrieve a specific product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing product",
        "description": "Update the name and price of a specific product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the product to update.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Noodle Nova"
                  },
                  "price": {
                    "type": "integer",
                    "example": 22000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/Product"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "description": "Remove a specific product from the inventory by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the product to delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders",
        "description": "Retrieve a list of all orders.",
        "responses": {
          "200": {
            "description": "A list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Orders fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "totalOrderPrice": {
                                "type": "integer",
                                "example": 200000
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-09-28T01:50:28.488Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-09-28T01:50:28.488Z"
                              },
                              "customerId": {
                                "type": "integer",
                                "example": 1
                              },
                              "customer": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "John Doe"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-09-28T01:50:28.488Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-09-28T01:50:28.488Z"
                                  }
                                }
                              },
                              "orderItems": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "example": 10
                                    },
                                    "price": {
                                      "type": "integer",
                                      "example": 20000
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2024-09-28T01:50:28.488Z"
                                    },
                                    "updatedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2024-09-28T01:50:28.488Z"
                                    },
                                    "orderId": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "productId": {
                                      "type": "integer",
                                      "example": 1
                                    }
                                  }
                                }
                              },
                              "totalProducts": {
                                "type": "integer",
                                "example": 1
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "totalItems": {
                              "type": "integer",
                              "example": 1
                            },
                            "totalPages": {
                              "type": "integer",
                              "example": 1
                            },
                            "currentPage": {
                              "type": "integer",
                              "example": 1
                            },
                            "pageSize": {
                              "type": "integer",
                              "example": 10
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new order",
        "description": "Add a new order to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "orderItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "integer",
                          "example": 1
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderData"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please fill all of mandatory field"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "One or more products not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "paths": null,
    "/orders/{id}": {
      "get": {
        "summary": "Get order by ID",
        "description": "Retrieve details of a specific order by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the order to retrieve.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/Order"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing order",
        "description": "Update the details of a specific order by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the order to update.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "integer",
                          "example": 1
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderData"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please fill all of mandatory field"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an existing order",
        "description": "Remove a specific order by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the order to delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid order ID"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The product ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The product name",
            "example": "Noodle Nova"
          },
          "price": {
            "type": "integer",
            "description": "The price of the product",
            "example": 20000
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the product was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the product was last updated"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The customer ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The customer name",
            "example": "John Doe"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the customer was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the customer was last updated"
          }
        }
      },
      "OrderData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "totalOrderPrice": {
            "type": "integer",
            "example": 270000
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-09-28T01:50:28.488Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-09-28T01:50:28.488Z"
          },
          "customerId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "totalOrderPrice": {
            "type": "integer",
            "example": 270000
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-09-28T01:50:28.488Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-09-28T01:50:28.488Z"
          },
          "customerId": {
            "type": "integer",
            "example": 1
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The order item ID",
            "example": 1
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of products in the order item",
            "example": 2
          },
          "price": {
            "type": "integer",
            "description": "Price of the individual product in the order item",
            "example": 20000
          },
          "productId": {
            "type": "integer",
            "description": "ID of the product in the order item"
          },
          "orderId": {
            "type": "integer",
            "description": "ID of the order to which the item belongs"
          }
        }
      }
    }
  }
}